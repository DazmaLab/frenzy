#!/bin/sh
# Create MFS

get_mfs_size ()
{
MEM=`sysctl -n hw.physmem`
MFS_SIZE="45m"
MSIZE=128000000  # <128Mb - needs MFS size reduction
M2SIZE=64000000  # <64Mb - more MFS reduction
M3SIZE=40000000  # <40Mb - more MFS reduction

if [ ${MEM} -lt ${MSIZE} ]; then
    MFS_SIZE="35m"
fi
if [ ${MEM} -lt ${M2SIZE} ]; then
    MFS_SIZE="15m"
fi
if [ ${MEM} -lt ${M3SIZE} ]; then
    MFS_SIZE="10m"
fi
}



create_mfs ()
{

MD_DEV=`/sbin/mdconfig -a -t malloc -o compress -s ${MFS_SIZE}`
/sbin/newfs -m 0 -n -b 8192 -f 1024 /dev/${MD_DEV} >/dev/null 2>&1
/sbin/mount -o noatime /dev/${MD_DEV} ${fr_ram}

printf "$mi ${MSG_memory} ${MEM} | ${MSG_ramdisk} ${MFS_SIZE} |"
if [ "$enable_rwsys" = "YES" ]; then
    MFSLIST="etc"
else
    MFSLIST="etc var root"
fi
for d in ${MFSLIST}; do
    printf " ${d}"
    mkdir ${fr_ram}/$d
    if [ "${enable_unionfs}" = "YES" ]; then
	# unionfs enabled
	mount_nullfs ${fs}/$d /$d
	mount_unionfs -o noatime -o copymode=transparent ${fr_ram}/$d /$d
    else
	# old method
	mount_nullfs ${fr_ram}/$d /$d
	(cd ${fs}/${d} && find . -xdev | cpio -pdum --quiet /${d})
    fi
done
# populating /mnt
mkdir ${fr_ram}/mnt
mount_nullfs ${fr_ram}/mnt /mnt
cp -R ${fs}/mnt/* /mnt > /dev/null 2>&1

# Create directory for FEM mounting
mkdir ${femdirmod}
mkdir ${femdir}
mkdir ${femusr}
mkdir ${rwall}
echo "."
}

create_rw ()
{
# mounting read-write directory over all of it
if [ "$enable_rwsys" = "YES" ]; then
mount_unionfs -o noatime -o copymode=transparent ${rwall} /Frenzy/fs > /dev/null 2>&1
else
mount_unionfs -o noatime -o copymode=transparent ${femusr} /usr > /dev/null 2>&1
fi
}


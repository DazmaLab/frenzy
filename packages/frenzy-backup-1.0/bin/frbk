#!/usr/local/bin/perl
#
# Name    : Frenzy backup frontend
# Version : 0.2
# Author  : Sergei Mozhaisky (technix@frenzy.org.ua)
#

$MODID="frbackup";
$VERSION="0.1";
$DV="----------------------------------------------------";

$fstab="/etc/fstab";

$localepath="/usr/local/frenzy/locale/frbackup";
require "/usr/local/frenzy/lib/libdialog.mpl";
require "/usr/local/frenzy/lib/liblocale.mpl";

&locale;
&dialog_init;


# main

$menuitems="";
$menuitems .=	qq/ "backup" "${msg_fbk_create}" /;
$menuitems .=	qq/ "restore" "${msg_fbk_restore}" /;
$menuitems .=	qq/ "" "---" /;
$menuitems .=	qq/ "edit" "${msg_fbk_editlist}" /;
$menuitems .=	qq/ "" "---" /;
$menuitems .=	qq/ "${msg_quit}" "${msg_quitprog}" /;


$flag_exit = 0;
while ( $flag_exit == 0 ) {

($status, $choice) = &d_menu ("", 15, 70, 7, "$menuitems");

if ($status == 1) {$flag_exit = 1;}
if ($status == 256) {$flag_exit = 1;}

if ($status == 0) {
if ("$choice" eq "$msg_quit") {
$flag_exit = 1;
} else {
# action goes here
    if ("$choice" eq "restore") {
        system ("clear");
	system ("frmount auto");
        system ("frbk-restore");
    }
    if ("$choice" eq "edit") {
        system ("clear");
        system ("ee /usr/local/etc/frbackup/backup.lst");
        system ("clear");
    }
    if ("$choice" eq "backup") {
        system ("clear");
        system ("echo $msg_fbk_dobackup");
        system ("frbk-create");
	&export_backup;
    }
}
}
}


&dialog_destroy;
exit;



sub export_backup
{

$backup_fname = `cat /tmp/backup_file`;
$backup_fname =~ s/\n//g;
@backup_namef = split ("/", $backup_fname);
$backup_name = $backup_namef[$#backup_namef];

$file_size = `/usr/bin/stat -f "%z" $backup_fname`;
$file_size_mb = int($file_size / 1024);

$cmenuitems="";
$cmenuitems .=	qq/ "floppy" "${msg_fbk_tofloppy}" /;
$cmenuitems .=	qq/ "hdd" "${msg_fbk_tohdd}" /;
#$cmenuitems .=	qq/ "ftp" "${msg_fbk_toftp}" /;
$cmenuitems .=	qq/ "ssh" "${msg_fbk_tossh}" /;
#$cmenuitems .=	qq/ "smb" "${msg_fbk_tosmb}" /;
($status, $choice) = &d_menu ("$msg_fbk_savebackup \n$backup_name ($file_size_mb Kb)", 15, 70, 7, "$cmenuitems");

if ($status == 0) {
# action goes here
    if ("$choice" eq "floppy") {
	$status = &d_msgbox ("\n $msg_fbk_insdisk", 7, 60);
	system ("mount /mnt/floppy > /dev/null 2>&1");
	system ("mkdir /mnt/floppy/frenzy > /dev/null 2>&1");
	system ("mkdir /mnt/floppy/frenzy/backup > /dev/null 2>&1");
	$cmd="cp $backup_fname /mnt/floppy/frenzy/backup";
	system ("clear");
	system ("printf \"$msg_fbk_cpbackup\\n\\n\"");
	system ("echo \"# $cmd\"");
	system ("$cmd");
	system ("umount /mnt/floppy > /dev/null 2>&1");
    }
    if ("$choice" eq "hdd") {
	system ("frmount auto");
	&read_fstab;
	($status, $fsbackup) = &d_menu ("", 15, 70, 7, "$zmenuitems");
	if ($status == 0) {
	    system "remountp $fsbackup rw";
	    system ("mkdir $fsbackup/frenzy > /dev/null 2>&1");
	    system ("mkdir $fsbackup/frenzy/backup > /dev/null 2>&1");
	    $cmd="cp $backup_fname $fsbackup/frenzy/backup";
	    system ("clear");
	    system ("printf \"$msg_fbk_cpbackup\\n\\n\"");
	    system ("echo \"# $cmd\"");
	    system ("$cmd");
	    system ("remountp $fsbackup ro");
	}
    }
    if ("$choice" eq "ftp") {

    }
    if ("$choice" eq "ssh") {
	($status, $ssh_host) = &d_inputbox ("$msg_fbk_ssh_host", 9, 50);
	if ($status == 256) {exit;}
	($status, $ssh_login) = &d_inputbox ("$msg_fbk_ssh_login", 9, 50);
	if ($status == 256) {exit;}
	($status, $ssh_path) = &d_inputbox ("$msg_fbk_ssh_path", 9, 50);
	if ($status == 256) {exit;}
	$cmd="scp $backup_fname $ssh_login\@$ssh_host:$ssh_path";
	system ("clear");
	system ("printf \"$msg_fbk_cpbackup\\n\\n\"");
	system ("echo \"# $cmd\"");
	system ("$cmd");
    }
}
$status = &d_msgbox ("\n $msg_fbk_finish", 7, 50);

}





sub read_fstab
{
open (FT, "$fstab");
@fstab_part=<FT>;
close (FT);

$zmenuitems="";
foreach $ft (@fstab_part) {
    @partinfo = split (" ", $ft);
    if ($partinfo[0] eq "#") {next;}
    if ($partinfo[0] eq "") {next;}
    if ($partinfo[1] eq "none") {next;}
    if ($partinfo[0] =~ m/md0/) {next;}
    if ($partinfo[0] =~ m/fd0/) {next;}
    if ($partinfo[0] =~ m/cd[0-9]/) {next;}
    if ($partinfo[0] =~ m/proc/) {next;}
    if ($partinfo[2] =~ m/ntfs/) {next;}
    if ($partinfo[2] =~ m/reiserfs/) {next;}
    if ($partinfo[2] =~ m/ntfs/) {next;}
    if ($partinfo[2] =~ m/procfs/) {next;}

    $mnt_point=$partinfo[1];

    $info_device{$mnt_point} = $partinfo[0];
    $info_type{$mnt_point} = $partinfo[2];
    $info_options{$mnt_point} = $partinfo[3];

    if ($partinfo[3] =~ m/rw/) {$xmode = "$info_type{$mnt_point}"}
    if ($partinfo[3] =~ m/ro/) {$xmode = "$info_type{$mnt_point}"}

    $zmenuitems .= qq/ "$mnt_point" "$xmode"/; 
}
}








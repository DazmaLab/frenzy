#!/usr/local/bin/perl
#
# Name    : Frenzy USB Flash installer
# Version : 0.1
# Author  : Sergei Mozhaisky (technix@frenzy.org.ua)
#

$MODID="install2flash";
$VERSION="0.1";

$mb_size   = 1048576;
$msgsize   = 30;


$FRENZYCD=   "/Frenzy/boot";
$installdir= "/mnt/install.flash";
$flogfile=   "/tmp/install2flash.log";

$path_boot = "/boot/boot0";
$fdisk     = "/sbin/fdisk";
$partfile  = "/tmp/partition.tmp";
$slicefile = "/tmp/slice.tmp";

# get size for Frenzy partition
$zsize=`du -k -d 0 $FRENZYCD | cut -f 1`;
$part_s    = $zsize / 1000 + 2;

#
$localepath="/usr/local/frenzy/locale/install";
require "/usr/local/frenzy/lib/libdialog.mpl";
require "/usr/local/frenzy/lib/liblocale.mpl";

&locale;
&dialog_init;


&fr_confirm;

system ("all-umount");

$flxdev=&fr_drive();
if ($flxdev eq "") {exit;}
$fldev="/dev/$flxdev";


system ("clear");
&flash_init;
&flash_mkpart;
&flash_formatpart;
&flash_boot;

&install_data;

$status = &d_msgbox ("\n $msg_flash_complete", 7, 50);
system ("clear");
exit;

# Начало установки. Ждем подтверждения.
sub fr_confirm()
{
 ($status, $pf) = &d_inputbox ("$msg_flash_warning", 20, 60);
 if ($status == 256) {exit;}
 if ($fr_passphrase ne $pf) { &d_msgbox ("\n $msg_install_cancel", 7, 50); exit; }
}


sub fr_drive ()
{
$disks=`sysctl -n kern.disks`;
@drives = split (" ", $disks);
foreach $drive (@drives)
{
if ($drive =~ m/da/) { $menuitems .= qq/"$drive" "$msg_flash_fd $drive" /;}
}
($status, $drive) = &d_menu ("$msg_flash_seldisk \n\n", 14, 50, 5, $menuitems);
if ($status == 256) {exit;}
return $drive;
}


sub flash_init
{
print "\n==> $msg_flash_flinit "; printspace ("$msg_flash_flinit");
system ("dd if=/dev/zero of=$fldev bs=512 count=32 > $flogfile 2>&1");
system ("fdisk -BI $fldev > $flogfile 2>&1");
print "[OK]\n";
}

# =============================================================

sub flash_mkpart
{
print "\n==> $msg_flash_mkpart "; printspace ("$msg_flash_mkpart");
$geometry =`fdisk $fldev | grep cylin | tail -1`;
$sector   =`fdisk $fldev | grep Media | tail -1`;

@info  = split (" ", $geometry);
@infos = split (" ", $sector);

$fldev_cyl  = $info[0]; $fldev_cyl  =~ s/cylinders=//g;
$fldev_head = $info[1]; $fldev_head =~ s/heads=//g;
$fldev_sect = $info[2]; $fldev_sect =~ s/sectors\/track=//g;
$fldev_blk  = $info[3]; $fldev_blk  =~ s/\(//g;

$fldev_blksize = $infos[4]; $fldev_blksize =~ s/\n//g;

$fldev_size = $fldev_cyl * $fldev_head * $fldev_sect;


$msize = $part_s * $mb_size;
$mblocks = int($msize / $fldev_blksize) - $fldev_head;
$xcyls = int($mblocks / $fldev_head / $fldev_sect) - 5;

while ($dsize <= $part_s)
{
$xcyls++;
$res = ($xcyls * $fldev_head + ($fldev_head - 1)) * $fldev_sect;
$dsize = $res * $fldev_blksize / $mb_size;
}

$frp_size = $res;
$datp_start = $frp_size + 32;
$datp_size = $fldev_size - $frp_size - 32;
$frp_start = $datp_size + 32;

$ptable ="";
$ptable .= "g c$fldev_cyl h$fldev_head s$fldev_sect\n";
$ptable .= "p 1 0 0 0 \n";
$ptable .= "p 2 0 0 0 \n";
$ptable .= "p 3 0 0 0 \n";
$ptable .= "p 4 0 0 0 \n";
$ptable .= "p 1 11 32 $datp_size\n";
$ptable .= "p 2 165 $frp_start $frp_size \n";
$ptable .= "a 2 \n";

open (XTMP, "> $partfile");
print XTMP $ptable;
close (XTMP);
system ("$fdisk -f $partfile $fldev > $flogfile 2>&1");
system ("rm -f $partfile > $flogfile 2>&1");

print "[OK]\n";
}

# =============================================================

sub flash_formatpart
{
print "\n==> $msg_flash_format "; printspace ("$msg_flash_format");
$fldev_p1 = "$fldev" . "s2"; $fldev_p2 = "$fldev" . "s1"; 

# formatting first partition with UFS

system ("dd if=/dev/zero of=$fldev_p1 bs=512 count=32 > $flogfile 2>&1");
system ("bsdlabel -w -B $fldev_p1 > $flogfile 2>&1");
system ("bsdlabel $fldev_p1 > $slicefile");
open (SLICE, "$slicefile");
@sldata = <SLICE>;
close (SLICE);

open (SLICE, "> $slicefile");
foreach $slstring (@sldata)
{
if ($slstring =~ m/a:/) {$slstring =~ s/unused/4.2BSD/g;}
print SLICE $slstring;
}
close (SLICE);

system ("bsdlabel -R $fldev_p1 $slicefile > $flogfile 2>&1");
system ("rm $slicefile > $flogfile 2>&1");

$bsdslice = $fldev_p1 . "a";

system ("newfs -n -m 0 -b 4096 -f 512 -i 8192 $bsdslice > $flogfile 2>&1");
# formatting second partition with FAT

system ("newfs_msdos -F 32 $fldev_p2 > $flogfile 2>&1");
print "[OK]\n";
}


sub flash_boot
{
print "\n==> $msg_flash_boot "; printspace ("$msg_flash_boot");
system ("boot0cfg -B -o noupdate -s 2 -m 0xf $fldev");
print "[OK]\n";
}

sub install_data
{
$fldev_bsd = "$fldev" . "s2a";
print "\n==> $msg_flash_copyfiles\n";
$installdir="/mnt/install.flash";
system ("mkdir $installdir > /dev/null 2>&1");
system ("mount $fldev_bsd $installdir");

if (-e "/usr/local/bin/bar")
{
$xsize=`du -k -d 0 $FRENZYCD | cut -f 1`;
$xsize =~ s/\n//g;
$xxsize = $xsize . "k";
system ("(cd $FRENZYCD && tar -cf - *) | bar -sw-1 -ns -s $xxsize | (cd $installdir && tar -xBpf -)");
}
else
{
system ("cp -Rv $FRENZYCD/* $installdir"); 
}
system ("umount $installdir");
system ("rmdir $installdir");
}



sub printspace {
$istr = $_[0];
$lstr = length($istr);
$add = $msgsize - $lstr;
$spacestr="";
for ($i=1; $i<$add; $i++)
{
$spacestr.=" ";
}
print $spacestr;
}